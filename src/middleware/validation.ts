import { body, validationResult } from "express-validator";
import { Request, Response, NextFunction } from "express";

//middleware designed to handle validation errors generated by the Express Validator library
const handleValidationErrors = async (
  req: Request,
  res: Response,
  next: NextFunction
) => {
  const errors = validationResult(req);
  if (!errors.isEmpty()) {
    return res.status(400).json({ errors: errors.array() });
  }
  next();
};

export const validateMyUserRequest = [
  body("firstName").isString().notEmpty().withMessage("first name must be a string"),
  body("lastName").isString().notEmpty().withMessage("last name must be a string"),
  body("email").isString().notEmpty().withMessage("email must be a string"),
  handleValidationErrors,
];

export const validateMyBlogRequest = [
  body("title").isString().notEmpty().withMessage("Country is required"),
  body("content")
    .isString()
    .notEmpty()
    .withMessage("Restaurant Name is required"),
  handleValidationErrors,
];
